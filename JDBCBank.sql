--USER ACCOUNT TABLE
CREATE TABLE USER_ACCOUNT (
USER_ID INTEGER PRIMARY KEY,
USERNAME VARCHAR2(100),
FIRSTNAME VARCHAR2(100),
LASTNAME VARCHAR2(100),
PASS_WORD VARCHAR2(100),
STATUS INTEGER
);

--BANK ACCOUNT TABLE
CREATE TABLE BANK_ACCOUNT (
ACCOUNT_NUMBER INTEGER PRIMARY KEY,
AMOUNT NUMBER(15,2),
ACCOUNT_STATUS VARCHAR2(100),
USER_ID INTEGER
);

--CREATING A CONSTRAINT USING THE USER_ID FOR THE BANK ACCOUNT
ALTER TABLE BANK_ACCOUNT
ADD CONSTRAINT FK_BANK_ACCOUNT_CUSTOMER_ID
FOREIGN KEY (USER_ID) REFERENCES USER_ACCOUNT(USER_ID);

--LOOKUP TABLE FOR THE USER STATUS
CREATE TABLE STATUS_LOOKUP (
STATUS_NUMBER INTEGER,
STATUS_TYPE VARCHAR2(100)
);

--STATUS AND TYPES FOR THE STATUS_LOOKUP
INSERT INTO STATUS_LOOKUP VALUES(1,'CUSTOMER');
INSERT INTO STATUS_LOOKUP VALUES(2,'EMPLOYEE');
INSERT INTO STATUS_LOOKUP VALUES(3,'ADMIN');

--DROP TABLES
DROP TABLE USER_ACCOUNT;
DROP TABLE BANK_ACCOUNT;

--DROP SEQUENCES
DROP SEQUENCE USERSEQ;
DROP SEQUENCE ACCOUNTSEQ;

--SEQUENCES
CREATE SEQUENCE USERSEQ;
CREATE SEQUENCE ACCOUNTSEQ; 

INSERT INTO USER_ACCOUNT VALUES(USERSEQ.NEXTVAL,'ADMIN','ADMIN','ADMIN','ADMIN',3);
INSERT INTO USER_ACCOUNT VALUES(USERSEQ.NEXTVAL,'Test','TEST','TEST','TEST',1);
SELECT * FROM USER_ACCOUNT;