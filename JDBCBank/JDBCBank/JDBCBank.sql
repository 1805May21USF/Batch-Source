CREATE TABLE BANK_CUSTOMER(
    CUSTOMERID INT,
    USERNAME VARCHAR(20),
    PASSWORD VARCHAR(20),
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    MIDDLE_INITIAL VARCHAR(1),
    AGE INT,
    ADDRESS VARCHAR(100),
    CITY VARCHAR(100),
    ZIPCODE INT,
    STATE VARCHAR(2),
    PRIMARY KEY(CUSTOMERID)
);
INSERT INTO BANK_CUSTOMER VALUES (0, 'ADMIN', 'ROLLTIDE', 'NONE', 'NONE', 'A', 0, 'NONE', 'NONE', 0, 'N');

CREATE TABLE BANK_EMPLOYEE(
    EMPLOYEEID INT,
    USERNAME VARCHAR(20),
    PASSWORD VARCHAR(20),
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    MIDDLE_INITIAL VARCHAR(1),
    AGE INT,
    ADDRESS VARCHAR(100),
    CITY VARCHAR(100),
    ZIPCODE INT,
    STATE VARCHAR(2),
    DEPARTMENT VARCHAR(50),
    PAY NUMBER(10, 2),
    PRIMARY KEY (EMPLOYEEID)
);

CREATE TABLE BANK_ACCOUNT(
    ACCOUNTID INT,
    CUSTOMERID INT,
    ACCOUNT_TYPE VARCHAR(8),
    ACCOUNT_NAME VARCHAR(20),
    BALANCE NUMBER(10, 2),
    SHARED_ACCOUNT INTEGER,
    PRIMARY KEY(ACCOUNTID),
    FOREIGN KEY (CUSTOMERID) REFERENCES BANK_CUSTOMER(CUSTOMERID)
);

INSERT INTO BANK_ACCOUNT VALUES(0, 0, 'NONE', 'WITHDRAWAL', 0, 0);
INSERT INTO BANK_ACCOUNT VALUES(1, 0, 'NONE', 'DEPOSIT', 0, 0);

CREATE TABLE BANK_TRANSACTION(
    TRANSACTIONID INT,
    CUSTOMERID INT,
    INITIALACCOUNT INT,
    FINALACCOUNT INT,
    AMOUNT NUMBER(10, 2),
    TYPE VARCHAR(10),
    PRIMARY KEY(TRANSACTIONID),
    FOREIGN KEY(CUSTOMERID) REFERENCES BANK_CUSTOMER(CUSTOMERID),
    FOREIGN KEY(INITIALACCOUNT) REFERENCES BANK_ACCOUNT(ACCOUNTID),
    FOREIGN KEY (FINALACCOUNT) REFERENCES BANK_ACCOUNT(ACCOUNTID)
)

CREATE SEQUENCE TRANSSEQ
MINVALUE 50
MAXVALUE 10000
INCREMENT BY 1
START WITH 100;

CREATE SEQUENCE CUSSEQ
MINVALUE 50
MAXVALUE 10000
INCREMENT BY 1
START WITH 100;

CREATE SEQUENCE EMPSEQ
MINVALUE 50
MAXVALUE 10000
INCREMENT BY 1
START WITH 100;

CREATE SEQUENCE ACCSEQ
MINVALUE 50
MAXVALUE 10000
INCREMENT BY 1
START WITH 100;

CREATE OR REPLACE PROCEDURE INSERT_BANK_CUSTOMER(
    USERNAME VARCHAR,
    PASS VARCHAR,
    FIRSTNAME VARCHAR,
    LASTNAME VARCHAR,
    MIDDLEINITIAL VARCHAR,
    AGE INT,
    ADDRESS VARCHAR,
    CITY VARCHAR,
    ZIP INT,
    STATE VARCHAR
)
AS
BEGIN
    INSERT INTO BANK_CUSTOMER VALUES(CUSSEQ.NEXTVAL, USERNAME, PASS, FIRSTNAME, LASTNAME, MIDDLEINITIAL, AGE, ADDRESS, CITY, ZIP, STATE);
END;
/

CREATE OR REPLACE PROCEDURE INSERT_BANK_EMPLOYEE(
    USERNAME VARCHAR,
    PASS VARCHAR,
    FIRSTNAME VARCHAR,
    LASTNAME VARCHAR,
    MIDDLEINITIAL VARCHAR,
    AGE INT,
    ADDRESS VARCHAR,
    CITY VARCHAR,
    ZIP INT,
    STATE VARCHAR,
    DEP VARCHAR,
    PAY NUMBER
)
AS
BEGIN
    INSERT INTO BANK_EMPLOYEE VALUES(EMPSEQ.NEXTVAL, USERNAME, PASS, FIRSTNAME, LASTNAME, 
                                     MIDDLEINITIAL, AGE, ADDRESS, CITY, ZIP, STATE, DEP, PAY);
END;
/

CREATE OR REPLACE PROCEDURE INSERT_BANK_ACCOUNT(
    CUST_ID INT,
    TYPE VARCHAR,
    NAME VARCHAR,
    BAL NUMBER,
    SHARED VARCHAR
)
AS
BEGIN
    INSERT INTO BANK_ACCOUNT VALUES(ACCSEQ.NEXTVAL, CUST_ID, TYPE, NAME, BAL, SHARED);
END;
/

CREATE OR REPLACE PROCEDURE INSERT_BANK_TRANSACTION(
    CUSTOMERID INT,
    INITIALACCOUNT INT,
    FINALACCOUNT INT,
    AMOUNT NUMBER,
    TYPE VARCHAR
)
AS
BEGIN
    INSERT INTO BANK_TRANSACTION VALUES(TRANSSEQ.NEXTVAL, CUSTOMERID, INITIALACCOUNT, FINALACCOUNT, AMOUNT, TYPE);
END;
/

CREATE OR REPLACE PROCEDURE DELETE_BANK_CUSTOMER(CUSTOMER_ID INT)
AS
BEGIN
    DELETE FROM BANK_TRANSACTION WHERE CUSTOMERID = CUSTOMER_ID;
    DELETE FROM BANK_ACCOUNT WHERE CUSTOMERID = CUSTOMER_ID;
    DELETE FROM BANK_CUSTOMER WHERE CUSTOMERID = CUSTOMER_ID;
END;
/

CREATE OR REPLACE PROCEDURE DELETE_BANK_EMPLOYEE(EMPLOYEE_ID INT)
AS
BEGIN
    DELETE FROM BANK_EMPLOYEE WHERE EMPLOYEEID = EMPLOYEE_ID;
END;
/

CREATE OR REPLACE PROCEDURE DELETE_BANK_ACCOUNT(ACCOUNT_ID INT)
AS
BEGIN
    DELETE FROM BANK_TRANSACTION WHERE INITIALACCOUNT = ACCOUNT_ID;
    DELETE FROM BANK_TRANSACTION WHERE FINALACCOUNT = ACCOUNT_ID;
    DELETE FROM BANK_ACCOUNT WHERE ACCOUNTID = ACCOUNT_ID;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_BANK_CUSTOMER(
    CUST_ID INT,
    USERNAME VARCHAR,
    PASS VARCHAR,
    FIRSTNAME VARCHAR,
    LASTNAME VARCHAR,
    MIDDLEINITIAL VARCHAR,
    NEW_AGE INT,
    ADR VARCHAR,
    NEW_CITY VARCHAR,
    ZIP INT,
    ST VARCHAR
)
AS
BEGIN
    UPDATE BANK_CUSTOMER SET USERNAME = USER, PASSWORD = PASS, FIRST_NAME = FIRSTNAME, LAST_NAME = LASTNAME,
                             MIDDLE_INITIAL = MIDDLEINITIAL, AGE = NEW_AGE, ADDRESS = ADR, CITY = NEW_CITY,
                             ZIPCODE = ZIP, STATE = ST WHERE CUSTOMERID = CUST_ID;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_BANK_EMPLOYEE(
    EMP_ID INT,
    USER VARCHAR,
    PASS VARCHAR,
    FIRSTNAME VARCHAR,
    LASTNAME VARCHAR,
    MIDDLEINITIAL VARCHAR,
    NEW_AGE INT,
    ADR VARCHAR,
    NEW_CITY VARCHAR,
    ZIP INT,
    ST VARCHAR,
    DEP VARCHAR,
    NEW_PAY NUMBER
)
AS
BEGIN
    UPDATE BANK_EMPLOYEE SET USERNAME = USER, PASSWORD = PASS, FIRST_NAME = FIRSTNAME, LAST_NAME = LASTNAME,
                             MIDDLE_INITIAL = MIDDLEINITIAL, AGE = NEW_AGE, ADDRESS = ADR, CITY = NEW_CITY,
                             ZIPCODE = ZIP, STATE = ST, DEPARTMENT = DEP, PAY = NEW_PAY WHERE EMPLOYEEID = EMP_ID;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_BANK_ACCOUNT(
    ACC_ID INT,
    CUST_ID INT,
    TYPE VARCHAR,
    NAME VARCHAR,
    BAL NUMBER,
    SHARED VARCHAR
)
AS
BEGIN
    UPDATE BANK_ACCOUNT SET CUSTOMERID = CUST_ID, ACCOUNT_TYPE = TYPE, ACCOUNT_NAME = NAME, BALANCE = BAL, SHARED_ACCOUNT = SHARED 
    WHERE ACCOUNTID = ACC_ID;
END;
/

CREATE OR REPLACE PROCEDURE DEPOSIT_BANK_ACCOUNT(
    ACC_ID INT,
    BAL NUMBER
)
AS
BEGIN
    UPDATE BANK_ACCOUNT SET BALANCE = BAL WHERE ACCOUNTID = ACC_ID;
END;
/

CREATE OR REPLACE PROCEDURE WITHDRAW_BANK_ACCOUNT(
    ACC_ID INT,
    BAL NUMBER
)
AS
BEGIN
    UPDATE BANK_ACCOUNT SET BALANCE = BAL WHERE ACCOUNTID = ACC_ID;
END;
/

CREATE OR REPLACE PROCEDURE TRANSFER_BANK_ACCOUNT(
    ACC_ONE INT,
    BAL_ONE NUMBER,
    ACC_TWO INT,
    BAL_TWO NUMBER
)
AS
BEGIN
    UPDATE BANK_ACCOUNT SET BALANCE = BAL_ONE WHERE ACCOUNTID = ACC_ONE;
    UPDATE BANK_ACCOUNT SET BALANCE = BAL_TWO WHERE ACCOUNTID = ACC_TWO;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_BANK_TRANSACTION(
    CUST_ID INT,
    IA INT,
    FA INT,
    AM NUMBER,
    T VARCHAR
)
AS
BEGIN
    INSERT INTO BANK_TRANSACTION VALUES(TRANSSEQ.NEXTVAL, CUST_ID, IA, FA, AM, T);
END;
/

COMMIT;