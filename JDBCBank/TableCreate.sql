
CREATE TABLE JDBCBANK_CUSTOMER_ACCOUNT (
 REL_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 CUSTOMER_ID INTEGER,
 ACCOUNT_ID INTEGER
);

ALTER TABLE JDBCBANK_CUSTOMER_ACCOUNT
ADD CONSTRAINT FK_CUSTOMER_ID
FOREIGN KEY (CUSTOMER_ID) REFERENCES JDBCBANK_CUSTOMER(CUSTOMER_ID);

ALTER TABLE JDBCBANK_CUSTOMER_ACCOUNT
ADD CONSTRAINT FK_ACCOUNT_ID
FOREIGN KEY (ACCOUNT_ID) REFERENCES JDBCBANK_ACCOUNT(ACCOUNT_ID);

CREATE TABLE JDBCBANK_CUSTOMER_APPLICATION(
 REL_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 CUSTOMER_ID INTEGER,
 APPLICATION_ID INTEGER
);

ALTER TABLE JDBCBANK_CUSTOMER_APPLICATION
ADD CONSTRAINT FK_CUSTOMER_ID
FOREIGN KEY (CUSTOMER_ID) REFERENCES JDBCBANK_CUSTOMER(CUSTOMER_ID);

ALTER TABLE JDBCBANK_CUSTOMER_APPLICATION
ADD CONSTRAINT FK_APPLICATION_ID
FOREIGN KEY (APPLICATION_ID) REFERENCES JDBCBANK_APPLICATION(APPLICATION_ID);
 
CREATE TABLE JDBCBANK_CUSTOMER (
 CUSTOMER_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 USERNAME VARCHAR(50),
 PASSWORD VARCHAR(50),
 FNAME VARCHAR(50),
 LNAME VARCHAR(50)
);

CREATE TABLE JDBCBANK_EMPLOYEE (
 EMPLOYEE_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 USERNAME VARCHAR(50),
 PASSWORD VARCHAR(50),
 FNAME VARCHAR(50),
 LNAME VARCHAR(50),
 ISADMIN CHAR
);

CREATE TABLE JDBCBANK_ACCOUNT (
 ACCOUNT_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 BALANCE NUMBER(15,2),
 STATUS VARCHAR(20)
);

CREATE TABLE JDBCBANK_TRANSACTION(
 TRANSACTION_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 COMPLETION_DATE DATE,
 STATUS VARCHAR(20),
 TYPE VARCHAR(20),
 FROM_ACCOUNT_ID INTEGER,
 TO_ACCONT_ID INTEGER,
 AMOUNT NUMBER(30,2),
 BALANCE NUMBER(30,2)
);

ALTER TABLE JDBCBANK_TRANSACTION
ADD CONSTRAINT FK_FROM_ACCOUNT_ID
FOREIGN KEY (FROM_ACCOUNT_ID) REFERENCES JDBCBANK_ACCOUNT(ACCOUNT_ID);


CREATE TABLE JDBCBANK_APPLICATION (
 APPLICATION_ID NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
 INITIAL_BALANCE NUMBER(15,2),
 APPROVAL VARCHAR(20)
);



 