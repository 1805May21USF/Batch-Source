CREATE TABLE BANK_USER(
USERID INTEGER PRIMARY KEY,
FIRSTNAME VARCHAR2(50),
LASTNAME VARCHAR2(50),
USERNAME VARCHAR2(50),
PASSWORD VARCHAR2(50)
);

-- TABLE BANK_USER;

CREATE TABLE BANK_ACCOUNTS(
ACCOUNTID INTEGER PRIMARY KEY,
BALANCE FLOAT DEFAULT 0.00,
USERID INTEGER,
FOREIGN KEY (USERID) REFERENCES BANK_USER(USERID)
);

/*CREATE TABLE BANK_ADMIN(
SU_USERNAME VARCHAR2(50),
SU_PASSWORD VARCHAR2(50),
SU_NAME VARCHAR2(50)
);
*/

CREATE SEQUENCE USER_ID;
--DROP SEQUENCE USER_ID;

CREATE SEQUENCE BANK_ACCOUNT_ID
START WITH 1000
INCREMENT BY 111
NOCACHE
NOCYCLE;

--DROP SEQUENCE BANK_ACCOUNT_ID;

--SELECT * FROM BANK_ACCOUNTS;
--DROP TABLE BANK_ACCOUNTS;

--PROCEDURE TO CREATE NEW ACCOUNTS (USER ACTION)
CREATE OR REPLACE PROCEDURE CREATE_ACCOUNT
(USERID IN INTEGER)
AS
BEGIN
    INSERT INTO BANK_ACCOUNTS VALUES 
    (BANK_ACCOUNT_ID.NEXTVAL, 0.00, USERID);
END;
/

--DROP PROCEDURE CREATE_ACCOUNT;

--PROCEDURE TO UPDATE ACCOUNT
CREATE OR REPLACE PROCEDURE UPDATE_BALANCE
(ACCOUNT_ID IN INTEGER, NEW_BALANCE IN FLOAT)
AS
BEGIN
    UPDATE BANK_ACCOUNTS SET BALANCE = NEW_BALANCE WHERE ACCOUNTID = ACCOUNT_ID;
    COMMIT;
END;
/

--DROP PROCEDURE UPDATE_BALANCE
--PROCEDURE TO DELETE USER BANK ACCOUNT(USER ACTION)
CREATE OR REPLACE PROCEDURE DELETE_ACCOUNT(ACCOUNTID IN NUMBER)
AS
BEGIN
    DELETE FROM BANK_ACCOUNTS
    WHERE ACCOUNTID = ACCOUNT_ID;
COMMIT;
END;
/

--DROP PROCEDURE DELETE_ACCOUNT;

--DELETE USER (ADMIN ACTION)
CREATE OR REPLACE PROCEDURE DELETE_USER
(USER_ID IN NUMBER)
AS
BEGIN
    DELETE FROM BANK_ACCOUNTS
    WHERE USER_ID = USERID;
    DELETE FROM BANK_USER
    WHERE USER_ID = USERID;
    COMMIT;
END;
/
--DROP PROCEDURE DELETE_USER;

CREATE OR REPLACE PROCEDURE UPDATE_USER_INFO
(USER_ID IN INTEGER, NEW_USERNAME IN VARCHAR2, NEW_PASSWORD IN VARCHAR2)
AS
BEGIN
    UPDATE BANK_USER SET USERNAME = NEW_USERNAME WHERE USERID = USER_ID; 
    UPDATE BANK_USER SET PASSWORD = NEW_PASSWORD WHERE USERID = USER_ID;
    COMMIT;
END;
/

--DROP PROCEDURE UPDATE_USER_INFO
--DROP PROCEDURE UPDATE_ACCOUNT;