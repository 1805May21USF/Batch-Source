--Drop Table BankLinks;
--DROP TABLE BankCustomer;
--Drop TABLE BankAccount;
--Drop TABLE BankAccountType;

CREATE TABLE BankCustomer
(
	CID INT PRIMARY KEY,
	FNAME VARCHAR2(20),
	LNAME VARCHAR2(20),
	USERNAME VARCHAR2(20),
	PASS VARCHAR2(20)
);

CREATE TABLE BankAccount
(
	AID INT PRIMARY KEY,
	BALANCE NUMBER(10,2),
    ACCID INT
);

CREATE TABLE BankLinks
(
    CID INT,
    AID INT
);

CREATE TABLE BankAccountType
(
	ACCID INT PRIMARY KEY,
	ACCTYPE VARCHAR(20)
);

CREATE TABLE BANKADMIN(
    ADMINID INT PRIMARY KEY,
    FIRSTNAME VARCHAR(20),
    LASTNAME VARCHAR(20),
    USERNAME VARCHAR(20),
    PASSWORD VARCHAR(20)
    );



--ADDING FOREIGN KEY

ALTER TABLE BankAccount
	ADD CONSTRAINT FK_ACCTYPE
	FOREIGN KEY (ACCID) REFERENCES BankAccountType(ACCID);
	
ALTER TABLE BankLinks
    ADD CONSTRAINT FK_CUST_ID
    FOREIGN KEY (CID) REFERENCES BankCustomer(CID);
    
ALTER TABLE BankLinks
    ADD CONSTRAINT FK_ACC_ID
    FOREIGN KEY (AID) REFERENCES BankAccount(AID);
    
ALTER TABLE BankAccount
	ADD CONSTRAINT BALANCE_POSITVE
	CHECK(BALANCE >= 0);
	
-- Sequences and Procedures
CREATE SEQUENCE ADDBANKACC;
CREATE SEQUENCE ADDBANKCUST;

CREATE OR REPLACE PROCEDURE REMOVECUSTOMER(CUSTID INT) 
AS
BEGIN
DELETE BANKLINKS WHERE CID = CUSTID;
DELETE BANKCUSTOMER WHERE CID = CUSTID;
COMMIT;
END;
/


INSERT INTO BANKADMIN values(1,'admin','admin','admin','admin');
INSERT INTO BankAccountType values(1,'Savings');
INSERT INTO BankAccountType values(2,'Checkings');
