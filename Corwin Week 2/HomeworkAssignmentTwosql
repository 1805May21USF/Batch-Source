-- Section 2.1
SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE WHERE LASTNAME = 'King';

SELECT * FROM EMPLOYEE WHERE FIRSTNAME = 'Andrew' AND REPORTSTO IS NULL;

-- Section 2.2

SELECT * FROM ALBUM
ORDER BY TITLE;

SELECT FIRSTNAME FROM CUSTOMER
ORDER BY CITY DESC;

-- Section 2.3

INSERT INTO GENRE (GENREID,NAME) VALUES (26,'EDC');
INSERT INTO GENRE (GENREID,NAME) VALUES (27,'BASSY');

INSERT INTO EMPLOYEE (EMPLOYEEID,LASTNAME,FIRSTNAME,TITLE,REPORTSTO,BIRTHDATE,
HIREDATE,ADDRESS,CITY,STATE,COUNTRY,POSTALCODE,PHONE, FAX, EMAIL) VALUES 
(9,'Smith','Bob','Janitor',7,SYSDATE,SYSDATE,'123 Wallaby Way','Edmonton','AB','Canada','T5K 2N1',
'+1 (555) 442-535','+1 (555) 442-535','bobsmith@gmail.com');

INSERT INTO EMPLOYEE (EMPLOYEEID,LASTNAME,FIRSTNAME,TITLE,REPORTSTO,BIRTHDATE,
HIREDATE,ADDRESS,CITY,STATE,COUNTRY,POSTALCODE,PHONE, FAX, EMAIL) VALUES 
(9,'Jackson','Smith','Fluffer',7,SYSDATE,SYSDATE,'132 Wallaby Way','Edmonton','AB','Canada','T5K 2N1',
'+1 (555) 442-535','+1 (555) 442-535','jacksonsmith@gmail.com');

INSERT INTO CUSTOMER (CUSTOMERID,LASTNAME,FIRSTNAME,EMAIL) VALUES (60,'Doggy','Do','doggydo@gmail.com');
INSERT INTO CUSTOMER (CUSTOMERID,LASTNAME,FIRSTNAME,EMAIL) VALUES (61,'Dog','Doggy','dogdoggy@gmail.com');

-- Section 2.4

UPDATE CUSTOMER SET FIRSTNAME = 'Robert', LASTNAME = 'Walker' WHERE FIRSTNAME = 'Michael' AND LASTNAME ='Mitchell';
UPDATE ARTIST SET NAME = 'CCR' WHERE NAME = 'Creedence Clearwater Revival';

-- Section 2.5
SELECT * FROM INVOICE WHERE BILLINGADDRESS LIKE 'T%';

-- Section 2.6
SELECT * FROM INVOICE WHERE TOTAL BETWEEN 15 AND 50;
SELECT * FROM EMPLOYEE WHERE HIREDATE BETWEEN '01-JUN-2003' AND '01-MAR-2004';

-- Section 2.7

DELETE FROM INVOICELINE WHERE INVOICEID IN (SELECT INVOICEID FROM INVOICE WHERE CUSTOMERID =32);
DELETE FROM INVOICE WHERE CUSTOMERID = 32;
DELETE FROM CUSTOMER WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walker';

-- Section 3.1

CREATE OR REPLACE FUNCTION getcurrentdate
    RETURN DATE
    IS
    BEGIN
        RETURN SYSTIMESTAMP;
    END getcurrentdate;
    /
    
SELECT getcurrentdate FROM DUAL;

CREATE OR REPLACE FUNCTION getl(str IN STRING)
    RETURN NUMBER
    IS
    BEGIN
        RETURN LENGTH(str);
    END getl;   
/

SELECT getl(NAME) FROM MEDIATYPE;

--SECTION 3.2
CREATE OR REPLACE FUNCTION average(total IN NUMBER)
    RETURN NUMBER
    IS
    BEGIN
        RETURN AVG(total);
    END average;
    /

SELECT avg(TOTAL) FROM INVOICE; 


create or replace FUNCTION top
    RETURN VARCHAR IS titl VARCHAR(30);
    BEGIN
        SELECT NAME INTO titl FROM TRACK WHERE UNITPRICE IS (SELECT UNITPRICE FROM TRACK ORDER BY UNITPRICE DESC FETCH FIRST) ORDER BY DESC FETCH FIRST;
        RETURN titl;
    END top;
/

SELECT top FROM DUAL;

--Section 6.1
create or replace TRIGGER EMP_AFTER_TRIGGER  AFTER INSERT ON EMPLOYEE
BEGIN
DBMS_OUTPUT.PUT_LINE('Inserting');
END;
/

create or replace TRIGGER EMP_AFTER_TRIGGER  AFTER UPDATE ON EMPLOYEE
BEGIN
DBMS_OUTPUT.PUT_LINE('Updating');
END;
/

create or replace TRIGGER EMP_AFTER_TRIGGER  AFTER DELETE ON EMPLOYEE
BEGIN
DBMS_OUTPUT.PUT_LINE('Deleting');
END;
/

--SECTION 4.1
CREATE OR BEGIN PROCEDURE empRet
IS
BEGIN
    SELECT FIRSTNAME,LASTNAME from EMPLOYEE;
    --WHY WOULD YOU ASK US TO DO THIS WITH PROCEDURES?!
END;
/

--SECTION 4.2
CREATE OR REPLACE PROCEDURE update_assignment_employee(id IN NUMBER,ln in VARCHAR, fn in VARCHAR, ti in VARCHAR, rpt in NUMBER, bd in DATE,hd in DATE, addr in VARCHAR, city in VARCHAR, st in VARCHAR, cnty in VARCHAR, code in NUMBER, fx in VARCHAR, em in VARCHAR)
IS
BEGIN

INSERT INTO EMPLOYEE (EMPLOYEEID,LASTNAME,FIRSTNAME,TITLE,REPORTSTO,BIRTHDATE,HIREDATE,ADDRESS,CITY,STATE,COUNTRY,POSTALCODE,PHONE, FAX, EMAIL) VALUES (id,ln,fn,ti,rpt,bd,hd,addr,city,st,cnty,code,fx,fx,em);

COMMIT;
END;
/

--SECTION 4.3
CREATE OR REPLACE PROCEDURE assignment_employee_manager(eid in NUMBER)
RETURN NUMBER manager NUMBER;
BEGIN

SELECT EMPLOYEEID AS manager FROM EMPLOYEE WHERE EMPLOYEEID = eid;

COMMIT;
END;
/
--SECTION 7.1 Inner join between customers and orders that displays name and invoice id.
SELECT CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,INVOICE.INVOICEID FROM CUSTOMER INNER JOIN INVOICE ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;

--SECTION 7.2
SELECT CUSTOMER.CUSTOMERID,CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,INVOICE.INVOICEID,INVOICE.TOTAL FROM CUSTOMER FULL OUTER JOIN INVOICE ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;

--Section 7.3
SELECT ARTIST.NAME, ALBUM.TITLE FROM ARTIST LEFT OUTER JOIN ALBUM ON ALBUM.ARTISTID = ARTIST.ARTISTID;

--Section 7.4
SELECT * FROM ARTIST CROSS JOIN ALBUM WHERE ALBUM.ARTISTID = ARTIST.ARTISTID ORDER BY ARTIST.NAME ASC;

--Section 7.5
SELECT a.FIRSTNAME,a.LASTNAME,a.REPORTSTO FROM EMPLOYEE a,EMPLOYEE b WHERE a.EMPLOYEEID = b.EMPLOYEEID;

