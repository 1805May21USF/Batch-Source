CREATE TABLE B_USER(
    USER_ID      NUMBER(5) NOT NULL,
    USERNAME     VARCHAR2(20) NOT NULL,
    FIRST_NAME   VARCHAR2(20) NOT NULL,
    LAST_NAME    VARCHAR2(20) NOT NULL,
    PASSWORD     VARCHAR2(50) NOT NULL,
    ADMIN_STATUS NUMBER(1),  
    LOGGED_IN    NUMBER(1)
    );

CREATE TABLE B_ACCOUNT(
    ACCOUNT_ID   NUMBER(6) NOT NULL,
    ACCOUNT_BAL  FLOAT,
    PREV_ACTION  VARCHAR2(10)
    );
    
CREATE TABLE B_USER_ACCT_REF(
    USER_ID      NUMBER(5) NOT NULL,
    ACCOUNT_ID   NUMBER(6) NOT NULL,
    CONSTRAINT user_fk
        FOREIGN KEY (USER_ID) REFERENCES B_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT account_FK 
        FOREIGN KEY (ACCOUNT_ID) REFERENCES B_ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE
    );

ALTER TABLE B_ACCOUNT ADD (
  CONSTRAINT account_pk PRIMARY KEY (ACCOUNT_ID));
  
ALTER TABLE B_USER ADD (
  CONSTRAINT user_pk PRIMARY KEY (USER_ID));
  
  
CREATE SEQUENCE account_id_seq START WITH 1;
 
CREATE SEQUENCE user_id_seq START WITH 1;

--DELCARE 
--  TEMP NUMBER(5);

CREATE OR REPLACE PROCEDURE INSERTACCOUNT(ACCOUNT_BAL IN FLOAT, PREV_ACTION IN VARCHAR2, CURRUSER IN NUMBER)
IS
BEGIN
DECLARE
TEMP INT;
BEGIN
SELECT account_id_seq.NEXTVAL INTO TEMP FROM DUAL;
INSERT INTO B_ACCOUNT VALUES(TEMP, ACCOUNT_BAL, PREV_ACTION);
INSERT INTO B_USER_ACCT_REF VALUES(CURRUSER, TEMP);
END;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE INSERTUSER(UNAME IN B_USER.USERNAME%TYPE, FNAME IN B_USER.FIRST_NAME%TYPE, 
LNAME IN B_USER.LAST_NAME%TYPE, PASS IN B_USER.PASSWORD%TYPE, ADSTAT IN B_USER.ADMIN_STATUS%TYPE,
LOGSTAT IN B_USER.LOGGED_IN%TYPE, USE_APP IN B_USER.USER_APPROVED%TYPE)
AS
BEGIN
INSERT INTO B_USER VALUES(user_id_seq.NEXTVAL, UNAME, FNAME, LNAME, PASS, ADSTAT, LOGSTAT, USE_APP);
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE LOGIN(ID IN B_USER.USER_ID%TYPE)
AS
BEGIN 
UPDATE B_USER
SET LOGGED_IN = 1
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE LOGOUT(ID IN B_USER.USER_ID%TYPE)
AS
BEGIN 
UPDATE B_USER
SET LOGGED_IN = 0
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SETAPPROVE(ID IN B_USER.USER_ID%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  USER_APPROVED = 'Y'
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATEFNAME(ID IN B_USER.USER_ID%TYPE, VAL IN B_USER.FIRST_NAME%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  FIRST_NAME = VAL
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATELNAME(ID IN B_USER.USER_ID%TYPE, VAL IN B_USER.LAST_NAME%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  LAST_NAME = VAL
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATEUNAME(ID IN B_USER.USER_ID%TYPE, VAL IN B_USER.USERNAME%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  USERNAME = VAL
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATEPASS(ID IN B_USER.USER_ID%TYPE, VAL IN B_USER.PASSWORD%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  PASSWORD = VAL
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATEADMIN(ID IN B_USER.USER_ID%TYPE, VAL IN B_USER.ADMIN_STATUS%TYPE)
AS
BEGIN 
UPDATE B_USER
SET  ADMIN_STATUS = VAL
WHERE ID = USER_ID; 
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE DELETEENTRY(ID IN B_USER.USER_ID%TYPE)
AS
BEGIN 
DELETE FROM B_USER
WHERE USER_ID = ID;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE ATTACHINSERT(UID IN B_USER.USER_ID%TYPE, AID IN B_ACCOUNT.ACCOUNT_ID%TYPE)
AS
BEGIN
INSERT INTO B_USER_ACCT_REF VALUES(UID, AID);
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE CHANGEBAL(AID IN B_USER.USER_ID%TYPE, 
ABAL IN B_ACCOUNT.ACCOUNT_BAL%TYPE, PA IN B_ACCOUNT.PREV_ACTION%TYPE)
AS
BEGIN
UPDATE B_ACCOUNT
SET ACCOUNT_BAL = ABAL, PREV_ACTION = PA
WHERE AID = ACCOUNT_ID; 
COMMIT;
END;
/

INSERT INTO B_USER VALUES( 'Test', 'Test', 1, 0, 'Y');

--update B_USER
--SET USER_APPROVED = 'Y'
--WHERE USER_ID = 1;
--
--update B_USER
--SET ADMIN_STATUS = 1
--WHERE USER_ID = 1;
--DROP TABLE B_USER_ACCT_REF;
--
--ALTER TABLE B_USER ADD USER_APPROVED VARCHAR(3);