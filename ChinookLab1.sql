--2.1
--3 SELECT STATEMENTS 
SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE
WHERE LASTNAME = 'King';

SELECT * FROM EMPLOYEE
WHERE FIRSTNAME = 'Andrew' AND REPORTSTO IS NULL;

--2.2
--2 ORDER BY STATEMENTS
SELECT * FROM ALBUM
ORDER BY TITLE DESC;

SELECT FIRSTNAME FROM CUSTOMER
ORDER BY CITY ASC;

--2.3
--3 INSERT INTO STATEMENTS 
--GENRE
INSERT INTO GENRE (GENREID, NAME)
VALUES (26, 'Anime');

INSERT INTO GENRE (GENREID, NAME)
VALUES (27, 'African');

--EMPLOYEE
INSERT INTO EMPLOYEE
VALUES ('9', 'Aderele', 'Adegboyega', 'IT Staff', '6', '08-AUG-96', '04-MAR-04', '591 Columbia Boulevard West', 'Lethbridge', 'AB', 'Canada', 'T1H 1Y8', '+1 (403) 467-3352', '+1 (403) 467-8778', 'aderele@chinookcorp.com');

INSERT INTO EMPLOYEE
VALUES ('10', 'Ade', 'Gboyega', 'IT Staff', '6', '09-AUG-96', '04-MAR-04', '593 Columbia Boulevard West', 'Lethbridge', 'AB', 'Canada', 'T1H 1Y9', '+1 (403) 467-3345', '+1 (403) 467-8789', 'ade1@chinookcorp.com');

--CUSTOMER
INSERT INTO CUSTOMER
VALUES ('60', 'Marcus', 'Aderele', NULL, '150 Apple Drive', 'Tampa', NULL, 'United Kingdom', NULL, NULL, NULL, 'ade1@apple.at', '3');

INSERT INTO CUSTOMER
VALUES ('61', 'Marquis', 'Aderele', NULL, '160 Apple Drive', 'Tampa', NULL, 'United Kingdom', NULL, NULL, NULL, 'ade2@apple.at', '3');

--2.4
--2 UPDATE STATEMENTS
UPDATE CUSTOMER
SET FIRSTNAME = 'ROBERT', LASTNAME = 'WALTER'
WHERE CUSTOMERID = 32;

UPDATE ARTIST
SET NAME  = 'CCR'
WHERE NAME = 'Creedence Clearwater Revival';

--2.5
--LIKE STATEMENT 
SELECT * FROM INVOICE
WHERE BILLINGADDRESS LIKE 'T%';

--2.6 
--2 BETWEEN STATEMENTS
SELECT * FROM INVOICE
WHERE TOTAL BETWEEN 15 AND 50;

SELECT * FROM EMPLOYEE
WHERE HIREDATE BETWEEN TO_DATE ('01-JUN-03') AND TO_DATE ('01-MAR-04');

--2.7
--DELETE STATEMENT
DELETE FROM INVOICELINE
WHERE INVOICEID IN (SELECT INVOICEID FROM INVOICE
WHERE CUSTOMERID IN (SELECT CUSTOMERID FROM CUSTOMER
WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter'));
DELETE FROM INVOICE
WHERE CUSTOMERID IN (SELECT CUSTOMERID FROM CUSTOMER
WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter');
DELETE FROM CUSTOMER
WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter';

--3 SQL FUNCTIONS

--3.1 ( 2 SYSTEM DEFINED FUNCTIONS)
--CURRENT TIME
CREATE OR REPLACE FUNCTION CURRENTTIME
RETURN VARCHAR2 AS CURRENTTIME VARCHAR(260);
BEGIN
SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS')INTO CURRENTTIME FROM DUAL;
RETURN CURRENTTIME;
END;
/
SELECT CURRENTTIME() FROM DUAL;

--LENGTH OF STRING 
CREATE OR REPLACE FUNCTION IS_LENGTH
(MEDIA_NAME IN VARCHAR2)
RETURN NUMBER AS IS_LENGTH NUMBER;
BEGIN
RETURN LENGTH(MEDIA_NAME);
END;
/
SELECT IS_LENGTH(NAME) FROM MEDIATYPE;

--3.2 (2 SYSTEM DEFINED AGGREGATE FUNCTIONS))
--AVG
CREATE OR REPLACE FUNCTION AVERAGE
RETURN NUMBER AS AVERAGE NUMBER(10,2);
BEGIN
SELECT AVG(TOTAL) INTO AVERAGE FROM INVOICE;
RETURN AVERAGE;
END;
/
SELECT AVERAGE() FROM DUAL;

--MAX PRICE
CREATE OR REPLACE FUNCTION MAXPRICE
RETURN NUMBER AS MOSTE NUMBER(10,2);
BEGIN
SELECT MAX(UNITPRICE) INTO MOSTE FROM TRACK;
RETURN MOSTE;
END;
/

SELECT MAXPRICE() FROM DUAL;

--3.3 (1 USER DEFINED SCALAR FUNCTION)
CREATE OR REPLACE FUNCTION AVERAGE_PRICE
RETURN NUMBER AS AVERAGE NUMBER(10,2);
BEGIN
SELECT AVG(UNITPRICE) INTO AVERAGE FROM INVOICELINE;
RETURN AVERAGE;
END;
/

SELECT AVERAGE_PRICE() FROM DUAL;

--3.4 (1 USER DEFINED TABLE VALUE FUNCTION)
--(THIS IS MY ATTEMPT AT 3.4,(SHOULD NOT WORK) I THINK A CURSOR WOULD WORK FOR THIS LIKE 4.1)
CREATE OR REPLACE FUNCTION EMPLOYEE_1968
RETURN SYS AS EMPLOYEES SYS;
BEGIN
SELECT FIRSTNAME INTO EMPLOYEES FROM EMPLOYEE WHERE CAST(BIRTHDATE AS DATE) > '1968-12-31';
RETURN EMPLOYEES;
END;
/

SELECT EMPLOYEE_1968() FROM DUAL;

--4.1 ( 1 BASIC STORED PROCEDURE)
--(USED A CURSOR FOR THIS BECAUSE I DIDNT KNOW HOW ELSE TO IMPLEMENT IT)
DECLARE 
    S SYS_REFCURSOR;
    FIRSTNAME EMPLOYEE.FIRSTNAME%TYPE;
    LASTNAME EMPLOYEE.LASTNAME%TYPE;
BEGIN 
GET_ALL_EMPLOYEE(S);
    LOOP
        FETCH S INTO FIRSTNAME, LASTNAME;
        EXIT WHEN S%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(FIRSTNAME||' '||LASTNAME);
    END LOOP;
    CLOSE S;
END;
/

CREATE OR REPLACE PROCEDURE GET_ALL_EMPLOYEE (S OUT SYS_REFCURSOR)
IS 
BEGIN
OPEN S FOR 
SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
END;
/

SET SERVEROUTPUT ON;


--(COULD NOT GET TO THESE BECUASE I WORKED ON PROJECT)
--4.2
--4.3
--5.0
--6.1


--7.0 (JOINS)
---7.1
--INNERJOIN
SELECT CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,INVOICE.INVOICEID FROM CUSTOMER
INNER JOIN INVOICE ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;

--7.2 
--OUTER JOIN
SELECT CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, CUSTOMER.CUSTOMERID, INVOICE.INVOICEID,INVOICE.TOTAL
FROM CUSTOMER
FULL OUTER JOIN INVOICE ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;

--7.3
-- RIGHT JOIN
SELECT ARTIST.NAME, ALBUM.TITLE
FROM ARTIST
RIGHT OUTER JOIN ALBUM ON ARTIST.ARTISTID = ALBUM.ARTISTID;

--7.4
--CROSS JOIN
SELECT *
FROM ALBUM
CROSS JOIN ARTIST
ORDER BY ARTIST.NAME ASC;

--7.5
--SELF JOIN
SELECT *
FROM EMPLOYEE E, EMPLOYEE E2
WHERE E.REPORTSTO = E2.REPORTSTO;