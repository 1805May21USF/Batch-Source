DROP TABLE BANKUSERSLOGINS;

drop table BANKUSERS;
CREATE TABLE BANKUSERS
(
    UserID INTEGER NOT NULL,
    isAdmin INTEGER NOT NULL,
    isActive INTEGER NOT NULL,
    Balance NUMBER NOT NULL,

    CONSTRAINT BANKUSERSpk PRIMARY KEY  (UserID)
);
CREATE TABLE BANKUSERSLOGINS
(
    UserID INTEGER NOT NULL,
    USERNAME VARCHAR2(80) UNIQUE NOT NULL,
    PASSWD VARCHAR2(80),
    CONSTRAINT BANKUSERSLOGINSFK FOREIGN KEY  (UserID) REFERENCES BANKUSERS(UserID)
);

insert into bankUsers values(0,0,1,0.0);
insert into bankUsersLogins values(0,'defaultUser', 'defaultUser');
insert into bankUsers values(1,1,1,0.0);
insert into bankUsersLogins values(1,'admin', 'admin');
DROP SEQUENCE userIDSequence;
CREATE SEQUENCE userIDSequence
  MINVALUE 0
  MAXVALUE 10000
  START WITH 1000
  INCREMENT BY 1
  CACHE 20;

CREATE OR REPLACE FUNCTION INSERTUSER(isAdmin number, isActive number, balance NUMBER) RETURN NUMBER AS
    resultID   NUMBER;
BEGIN
resultID := userIDSequence.nextVAL;
INSERT INTO BANKUSERS VALUES(resultID, isAdmin, isActive, balance);
return(resultID);
end INSERTUSER;
/

CREATE OR REPLACE PROCEDURE INSERTLOGIN( UserID NUMBER, USERNAME VARCHAR2,PASSWD VARCHAR2) AS
 BEGIN
insert into BANKUSERSLOGINS Values(UserID, USERNAME, PASSWD);
end INSERTLOGIN;
/


